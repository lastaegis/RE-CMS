{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/utils/escapeMarkup-tests.js"],"names":["module","Utils","require","test","assert","text","escaped","escapeMarkup","equal","notEqual","indexOf","frag","document","createDocumentFragment","innerHTML"],"mappings":";;AAAAA,OAAO,sBAAP;;AAEA,IAAIC,QAAQC,QAAQ,eAAR,CAAZ;;AAEAC,KAAK,qBAAL,EAA4B,UAAUC,MAAV,EAAkB;AAC5C,MAAIC,OAAO,cAAX;AACA,MAAIC,UAAUL,MAAMM,YAAN,CAAmBF,IAAnB,CAAd;;AAEAD,SAAOI,KAAP,CAAaH,IAAb,EAAmBC,OAAnB;AACD,CALD;;AAOAH,KAAK,uBAAL,EAA8B,UAAUC,MAAV,EAAkB;AAC9C,MAAIC,OAAO,gCAAX;AACA,MAAIC,UAAUL,MAAMM,YAAN,CAAmBF,IAAnB,CAAd;;AAEAD,SAAOK,QAAP,CAAgBJ,IAAhB,EAAsBC,OAAtB;AACAF,SAAOI,KAAP,CAAaF,QAAQI,OAAR,CAAgB,UAAhB,CAAb,EAA0C,CAAC,CAA3C;AACD,CAND;;AAQAP,KAAK,2BAAL,EAAkC,UAAUC,MAAV,EAAkB;AAClD,MAAIC,OAAO,yBAAX;AACA,MAAIC,UAAUL,MAAMM,YAAN,CAAmBF,IAAnB,CAAd;;AAEAD,SAAOK,QAAP,CAAgBJ,IAAhB,EAAsBC,OAAtB;AACAF,SAAOI,KAAP,CAAaF,QAAQI,OAAR,CAAgB,IAAhB,CAAb,EAAoC,CAAC,CAArC;AACAN,SAAOI,KAAP,CAAaF,QAAQI,OAAR,CAAgB,GAAhB,CAAb,EAAmC,CAAC,CAApC;AACD,CAPD;;AASAP,KAAK,uCAAL,EAA8C,UAAUC,MAAV,EAAkB;AAC9D,MAAIO,OAAOC,SAASC,sBAAT,EAAX;AACAF,OAAKG,SAAL,GAAiB,uBAAjB;;AAEA,MAAIR,UAAUL,MAAMM,YAAN,CAAmBI,IAAnB,CAAd;;AAEAP,SAAOI,KAAP,CAAaG,IAAb,EAAmBL,OAAnB;AACD,CAPD","file":"escapeMarkup-tests.js","sourcesContent":["module('Utils - escapeMarkup');\n\nvar Utils = require('select2/utils');\n\ntest('text passes through', function (assert) {\n  var text = 'testing this';\n  var escaped = Utils.escapeMarkup(text);\n\n  assert.equal(text, escaped);\n});\n\ntest('html tags are escaped', function (assert) {\n  var text = '<script>alert(\"bad\");</script>';\n  var escaped = Utils.escapeMarkup(text);\n\n  assert.notEqual(text, escaped);\n  assert.equal(escaped.indexOf('<script>'), -1);\n});\n\ntest('quotes are killed as well', function (assert) {\n  var text = 'testin\\' these \"quotes\"';\n  var escaped = Utils.escapeMarkup(text);\n\n  assert.notEqual(text, escaped);\n  assert.equal(escaped.indexOf('\\''), -1);\n  assert.equal(escaped.indexOf('\"'), -1);\n});\n\ntest('DocumentFragment options pass through', function (assert) {\n  var frag = document.createDocumentFragment();\n  frag.innerHTML = '<strong>test</strong>';\n\n  var escaped = Utils.escapeMarkup(frag);\n\n  assert.equal(frag, escaped);\n});\n"]}