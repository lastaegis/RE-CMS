{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/selection/containerCss-tests.js"],"names":["module","$","require","Utils","Options","SingleSelection","ContainerCSS","Decorate","test","assert","$element","options","containerCssClass","select","$container","render","ok","hasClass","adaptContainerCssClass","clazz"],"mappings":"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","file":"containerCss-tests.js","sourcesContent":["module('Dropdown - containerCssClass compatibility');\n\nvar $ = require('jquery');\nvar Utils = require('select2/utils');\nvar Options = require('select2/options');\n\nvar SingleSelection = require('select2/selection/single');\nvar ContainerCSS = Utils.Decorate(\n  SingleSelection,\n  require('select2/compat/containerCss')\n);\n\ntest('all classes will be copied if :all: is used', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    containerCssClass: ':all:'\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok($container.hasClass('test'));\n  assert.ok($container.hasClass('copy'));\n  assert.ok($container.hasClass('works'));\n  assert.ok(!$container.hasClass(':all:'));\n});\n\ntest(':all: can be used with other classes', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    containerCssClass: ':all: other'\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok($container.hasClass('test'));\n  assert.ok($container.hasClass('copy'));\n  assert.ok($container.hasClass('works'));\n  assert.ok($container.hasClass('other'));\n  assert.ok(!$container.hasClass(':all:'));\n});\n\ntest('classes can be passed in as a string', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    containerCssClass: 'other'\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok($container.hasClass('other'));\n});\n\ntest('a function can be used based on the element', function (assert){\n  var $element = $('<select class=\"test\"></select>');\n  var options = new Options({\n    containerCssClass: function ($element) {\n      return 'function';\n    }\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok($container.hasClass('function'));\n  assert.ok(!$container.hasClass('test'));\n});\n\ntest(':all: works around custom adapters', function (assert) {\n  var $element = $('<select class=\"test\"></select>');\n  var options = new Options({\n    containerCssClass: ':all: something',\n    adaptContainerCssClass: function (clazz) {\n      return clazz + '-modified';\n    }\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok($container.hasClass('something'));\n\n  assert.ok($container.hasClass('test'));\n  assert.ok($container.hasClass('test-modified'));\n});\n\nmodule('Selection - adaptContainerCss compatibility');\n\ntest('only return when adapted', function (assert) {\n  var $element = $('<select class=\"original\"></select>');\n  var options = new Options({\n    adaptContainerCssClass: function (clazz) {\n      return 'modified';\n    }\n  });\n\n  var select = new ContainerCSS($element, options);\n  var $container = select.render();\n\n  assert.ok(!$container.hasClass('original'));\n  assert.ok($container.hasClass('modified'));\n});\n"]}