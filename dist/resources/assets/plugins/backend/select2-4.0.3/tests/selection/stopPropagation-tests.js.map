{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/selection/stopPropagation-tests.js"],"names":["module","SingleSelection","require","StopPropagation","$","Options","Utils","CutomSelection","Decorate","options","test","assert","expect","$container","container","MockContainer","selection","$selection","render","bind","append","on","ok","trigger"],"mappings":";;AAAAA,OAAO,kDAAP;;AAEA,IAAIC,kBAAkBC,QAAQ,0BAAR,CAAtB;AACA,IAAIC,kBAAkBD,QAAQ,mCAAR,CAAtB;;AAEA,IAAIE,IAAIF,QAAQ,QAAR,CAAR;AACA,IAAIG,UAAUH,QAAQ,iBAAR,CAAd;AACA,IAAII,QAAQJ,QAAQ,eAAR,CAAZ;;AAEA,IAAIK,iBAAiBD,MAAME,QAAN,CAAeP,eAAf,EAAgCE,eAAhC,CAArB;;AAEA,IAAIM,UAAU,IAAIJ,OAAJ,EAAd;;AAEAK,KAAK,gCAAL,EAAuC,UAAUC,MAAV,EAAkB;AACvDA,SAAOC,MAAP,CAAc,CAAd;;AAEA,MAAIC,aAAaT,EAAE,iCAAF,CAAjB;AACA,MAAIU,YAAY,IAAIC,aAAJ,EAAhB;;AAEA,MAAIC,YAAY,IAAIT,cAAJ,CAAmBH,EAAE,uBAAF,CAAnB,EAA+CK,OAA/C,CAAhB;;AAEA,MAAIQ,aAAaD,UAAUE,MAAV,EAAjB;AACAF,YAAUG,IAAV,CAAeL,SAAf,EAA0BD,UAA1B;;AAEAA,aAAWO,MAAX,CAAkBH,UAAlB;AACAJ,aAAWQ,EAAX,CAAc,OAAd,EAAuB,YAAY;AACjCV,WAAOW,EAAP,CAAU,KAAV,EAAiB,0CAAjB;AACD,GAFD;;AAIAL,aAAWM,OAAX,CAAmB,OAAnB;;AAEAZ,SAAOW,EAAP,CAAU,IAAV,EAAgB,qCAAhB;AACD,CAnBD","file":"stopPropagation-tests.js","sourcesContent":["module('Selection containers - Stoping event propagation');\n\nvar SingleSelection = require('select2/selection/single');\nvar StopPropagation = require('select2/selection/stopPropagation');\n\nvar $ = require('jquery');\nvar Options = require('select2/options');\nvar Utils = require('select2/utils');\n\nvar CutomSelection = Utils.Decorate(SingleSelection, StopPropagation);\n\nvar options = new Options();\n\ntest('click event does not propagate', function (assert) {\n  assert.expect(1);\n\n  var $container = $('#qunit-fixture .event-container');\n  var container = new MockContainer();\n\n  var selection = new CutomSelection($('#qunit-fixture select'), options);\n\n  var $selection = selection.render();\n  selection.bind(container, $container);\n\n  $container.append($selection);\n  $container.on('click', function () {\n    assert.ok(false, 'The click event should have been stopped');\n  });\n\n  $selection.trigger('click');\n\n  assert.ok(true, 'Something went wrong if this failed');\n});\n"]}