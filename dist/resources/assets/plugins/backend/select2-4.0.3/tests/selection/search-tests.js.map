{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/selection/search-tests.js"],"names":["module","MultipleSelection","require","InlineSearch","$","Options","Utils","options","test","assert","expect","KEYS","$container","container","MockContainer","CustomSelection","Decorate","$element","selection","$selection","render","bind","on","ok","update","id","text","$search","find","$choices","equal","length","backspace","Event","which","BACKSPACE","trigger","val","window","attachEvent","addEventListener","append","document","activeElement","notEqual"],"mappings":"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","file":"search-tests.js","sourcesContent":["module('Selection containers - Inline search');\n\nvar MultipleSelection = require('select2/selection/multiple');\nvar InlineSearch = require('select2/selection/search');\n\nvar $ = require('jquery');\nvar Options = require('select2/options');\nvar Utils = require('select2/utils');\n\nvar options = new Options({});\n\ntest('backspace will remove a choice', function (assert) {\n  assert.expect(3);\n\n  var KEYS = require('select2/keys');\n\n  var $container = $('#qunit-fixture .event-container');\n  var container = new MockContainer();\n\n  var CustomSelection = Utils.Decorate(MultipleSelection, InlineSearch);\n\n  var $element = $('#qunit-fixture .multiple');\n  var selection = new CustomSelection($element, options);\n\n  var $selection = selection.render();\n  selection.bind(container, $container);\n\n  // The unselect event should be triggered at some point\n  selection.on('unselect', function () {\n    assert.ok(true, 'A choice was unselected');\n  });\n\n  // Add some selections and render the search\n  selection.update([\n    {\n      id: '1',\n      text: 'One'\n    }\n  ]);\n\n  var $search = $selection.find('input');\n  var $choices = $selection.find('.select2-selection__choice');\n\n  assert.equal($search.length, 1, 'The search was visible');\n  assert.equal($choices.length, 1, 'The choice was rendered');\n\n  // Trigger the backspace on the search\n  var backspace = $.Event('keydown', {\n    which: KEYS.BACKSPACE\n  });\n  $search.trigger(backspace);\n});\n\ntest('backspace will set the search text', function (assert) {\n  assert.expect(3);\n\n  var KEYS = require('select2/keys');\n\n  var $container = $('#qunit-fixture .event-container');\n  var container = new MockContainer();\n\n  var CustomSelection = Utils.Decorate(MultipleSelection, InlineSearch);\n\n  var $element = $('#qunit-fixture .multiple');\n  var selection = new CustomSelection($element, options);\n\n  var $selection = selection.render();\n  selection.bind(container, $container);\n\n  // Add some selections and render the search\n  selection.update([\n    {\n      id: '1',\n      text: 'One'\n    }\n  ]);\n\n  var $search = $selection.find('input');\n  var $choices = $selection.find('.select2-selection__choice');\n\n  assert.equal($search.length, 1, 'The search was visible');\n  assert.equal($choices.length, 1, 'The choice was rendered');\n\n  // Trigger the backspace on the search\n  var backspace = $.Event('keydown', {\n    which: KEYS.BACKSPACE\n  });\n  $search.trigger(backspace);\n\n  assert.equal($search.val(), 'One', 'The search text was set');\n});\n\ntest('updating selection does not shift the focus', function (assert) {\n  // Check for IE 8, which triggers a false negative during testing\n  if (window.attachEvent && !window.addEventListener) {\n    // We must expect 0 assertions or the test will fail\n    assert.expect(0);\n    return;\n  }\n\n  var $container = $('#qunit-fixture .event-container');\n  var container = new MockContainer();\n\n  var CustomSelection = Utils.Decorate(MultipleSelection, InlineSearch);\n\n  var $element = $('#qunit-fixture .multiple');\n  var selection = new CustomSelection($element, options);\n\n  var $selection = selection.render();\n  selection.bind(container, $container);\n\n  // Update the selection so the search is rendered\n  selection.update([]);\n\n  // Make it visible so the browser can place focus on the search\n  $container.append($selection);\n\n  var $search = $selection.find('input');\n  $search.trigger('focus');\n\n  assert.equal($search.length, 1, 'The search was not visible');\n\n  assert.equal(\n    document.activeElement,\n    $search[0],\n    'The search did not have focus originally'\n  );\n\n  // Trigger an update, this should redraw the search box\n  selection.update([]);\n\n  assert.equal($search.length, 1, 'The search box disappeared');\n\n  assert.equal(\n    document.activeElement,\n    $search[0],\n    'The search did not have focus after the selection was updated'\n  );\n});\n\ntest('the focus event shifts the focus', function (assert) {\n  // Check for IE 8, which triggers a false negative during testing\n  if (window.attachEvent && !window.addEventListener) {\n    // We must expect 0 assertions or the test will fail\n    assert.expect(0);\n    return;\n  }\n\n  var $container = $('#qunit-fixture .event-container');\n  var container = new MockContainer();\n\n  var CustomSelection = Utils.Decorate(MultipleSelection, InlineSearch);\n\n  var $element = $('#qunit-fixture .multiple');\n  var selection = new CustomSelection($element, options);\n\n  var $selection = selection.render();\n  selection.bind(container, $container);\n\n  // Update the selection so the search is rendered\n  selection.update([]);\n\n  // Make it visible so the browser can place focus on the search\n  $container.append($selection);\n\n  // The search should not be automatically focused\n\n  var $search = $selection.find('input');\n\n  assert.notEqual(\n    document.activeElement,\n    $search[0],\n    'The search had focus originally'\n  );\n\n  assert.equal($search.length, 1, 'The search was not visible');\n\n  // Focus the container\n\n  container.trigger('focus');\n\n  // Make sure it focuses the search\n\n  assert.equal($search.length, 1, 'The search box disappeared');\n\n  assert.equal(\n    document.activeElement,\n    $search[0],\n    'The search did not have focus originally'\n  );\n});"]}