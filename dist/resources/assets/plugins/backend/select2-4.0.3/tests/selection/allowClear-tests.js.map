{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/selection/allowClear-tests.js"],"names":["module","Placeholder","require","AllowClear","SingleSelection","$","Options","Utils","AllowClearPlaceholder","Decorate","allowClearOptions","placeholder","id","text","allowClear","test","assert","selection","$selection","render","update","equal","find","length","$element","container","MockContainer","bind","val","$remove","trigger","expect","on","ev","ok","data","isPlainObject","prevented","options","set"],"mappings":"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","file":"allowClear-tests.js","sourcesContent":["module('Selection containers - Placeholders - Allow clear');\n\nvar Placeholder = require('select2/selection/placeholder');\nvar AllowClear = require('select2/selection/allowClear');\n\nvar SingleSelection = require('select2/selection/single');\n\nvar $ = require('jquery');\nvar Options = require('select2/options');\nvar Utils = require('select2/utils');\n\nvar AllowClearPlaceholder = Utils.Decorate(\n  Utils.Decorate(SingleSelection, Placeholder),\n  AllowClear\n);\n\nvar allowClearOptions = new Options({\n  placeholder: {\n    id: 'placeholder',\n    text: 'This is the placeholder'\n  },\n  allowClear: true\n});\n\ntest('clear is not displayed for single placeholder', function (assert) {\n  var selection = new AllowClearPlaceholder(\n    $('#qunit-fixture .single-with-placeholder'),\n    allowClearOptions\n  );\n\n  var $selection = selection.render();\n\n  selection.update([{\n    id: 'placeholder'\n  }]);\n\n  assert.equal(\n    $selection.find('.select2-selection__clear').length,\n    0,\n    'The clear icon should not be displayed'\n  );\n});\n\ntest('clear is not displayed for multiple placeholder', function (assert) {\n  var selection = new AllowClearPlaceholder(\n    $('#qunit-fixture .single-with-placeholder'),\n    allowClearOptions\n  );\n\n  var $selection = selection.render();\n\n  selection.update([]);\n\n  assert.equal(\n    $selection.find('.select2-selection__clear').length,\n    0,\n    'The clear icon should not be displayed'\n  );\n});\n\n\ntest('clear is displayed for placeholder', function (assert) {\n  var selection = new AllowClearPlaceholder(\n    $('#qunit-fixture .single-with-placeholder'),\n    allowClearOptions\n  );\n\n  var $selection = selection.render();\n\n  selection.update([{\n    id: 'one',\n    test: 'one'\n  }]);\n\n  assert.equal(\n    $selection.find('.select2-selection__clear').length,\n    1,\n    'The clear icon should be displayed'\n  );\n});\n\ntest('clicking clear will set the placeholder value', function (assert) {\n  var $element = $('#qunit-fixture .single-with-placeholder');\n\n  var selection = new AllowClearPlaceholder(\n    $element,\n    allowClearOptions\n  );\n  var container = new MockContainer();\n\n  var $selection = selection.render();\n\n  selection.bind(container, $('<div></div'));\n\n  $element.val('One');\n  selection.update([{\n    id: 'One',\n    text: 'One'\n  }]);\n\n  var $remove = $selection.find('.select2-selection__clear');\n  $remove.trigger('mousedown');\n\n  assert.equal(\n    $element.val(),\n    'placeholder',\n    'The value should have been reset to the placeholder'\n  );\n});\n\ntest('clicking clear will trigger the unselect event', function (assert) {\n  assert.expect(3);\n\n  var $element = $('#qunit-fixture .single-with-placeholder');\n\n  var selection = new AllowClearPlaceholder(\n    $element,\n    allowClearOptions\n  );\n  var container = new MockContainer();\n\n  var $selection = selection.render();\n\n  selection.bind(container, $('<div></div'));\n\n  $element.val('One');\n  selection.update([{\n    id: 'One',\n    text: 'One'\n  }]);\n\n  selection.on('unselect', function (ev) {\n    assert.ok(\n      'data' in ev && ev.data,\n      'The event should have been triggered with the data property'\n    );\n\n    assert.ok(\n      $.isPlainObject(ev.data),\n      'The data should be an object'\n    );\n\n    assert.equal(\n      ev.data.id,\n      'One',\n      'The previous object should be unselected'\n    );\n  });\n\n  var $remove = $selection.find('.select2-selection__clear');\n  $remove.trigger('mousedown');\n});\n\n\n\ntest('preventing the unselect event cancels the clearing', function (assert) {\n  var $element = $('#qunit-fixture .single-with-placeholder');\n\n  var selection = new AllowClearPlaceholder(\n    $element,\n    allowClearOptions\n  );\n  var container = new MockContainer();\n\n  var $selection = selection.render();\n\n  selection.bind(container, $('<div></div'));\n\n  $element.val('One');\n  selection.update([{\n    id: 'One',\n    text: 'One'\n  }]);\n\n  selection.on('unselect', function (ev) {\n    ev.prevented = true;\n  });\n\n  var $remove = $selection.find('.select2-selection__clear');\n  $remove.trigger('mousedown');\n\n  assert.equal(\n    $element.val(),\n    'One',\n    'The placeholder should not have been set'\n  );\n});\n\ntest('clear does not work when disabled', function (assert) {\n  var $element = $('#qunit-fixture .single-with-placeholder');\n\n  var selection = new AllowClearPlaceholder(\n    $element,\n    allowClearOptions\n  );\n  var container = new MockContainer();\n\n  var $selection = selection.render();\n\n  selection.bind(container, $('<div></div'));\n\n  selection.update([{\n    id: 'One',\n    text: 'One'\n  }]);\n\n  $element.val('One');\n  selection.options.set('disabled', true);\n\n  var $remove = $selection.find('.select2-selection__clear');\n  $remove.trigger('mousedown');\n\n  assert.equal(\n    $element.val(),\n    'One',\n    'The placeholder should not have been set'\n  );\n});\n"]}