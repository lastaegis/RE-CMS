{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/dropdown/dropdownCss-tests.js"],"names":["module","$","require","Utils","Options","Dropdown","DropdownCSS","Decorate","test","assert","$element","options","dropdownCssClass","select","$dropdown","render","ok","hasClass","adaptDropdownCssClass","clazz"],"mappings":"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","file":"dropdownCss-tests.js","sourcesContent":["module('Dropdown - dropdownCssClass compatibility');\n\nvar $ = require('jquery');\nvar Utils = require('select2/utils');\nvar Options = require('select2/options');\n\nvar Dropdown = require('select2/dropdown');\nvar DropdownCSS = Utils.Decorate(\n  Dropdown,\n  require('select2/compat/dropdownCss')\n);\n\ntest('all classes will be copied if :all: is used', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    dropdownCssClass: ':all:'\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok($dropdown.hasClass('test'));\n  assert.ok($dropdown.hasClass('copy'));\n  assert.ok($dropdown.hasClass('works'));\n  assert.ok(!$dropdown.hasClass(':all:'));\n});\n\ntest(':all: can be used with other classes', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    dropdownCssClass: ':all: other'\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok($dropdown.hasClass('test'));\n  assert.ok($dropdown.hasClass('copy'));\n  assert.ok($dropdown.hasClass('works'));\n  assert.ok($dropdown.hasClass('other'));\n  assert.ok(!$dropdown.hasClass(':all:'));\n});\n\ntest('classes can be passed in as a string', function (assert) {\n  var $element = $('<select class=\"test copy works\"></select>');\n  var options = new Options({\n    dropdownCssClass: 'other'\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok($dropdown.hasClass('other'));\n});\n\ntest('a function can be used based on the element', function (assert){\n  var $element = $('<select class=\"test\"></select>');\n  var options = new Options({\n    dropdownCssClass: function ($element) {\n      return 'function';\n    }\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok($dropdown.hasClass('function'));\n  assert.ok(!$dropdown.hasClass('test'));\n});\n\ntest(':all: works around custom adapters', function (assert) {\n  var $element = $('<select class=\"test\"></select>');\n  var options = new Options({\n    dropdownCssClass: ':all: something',\n    adaptDropdownCssClass: function (clazz) {\n      return clazz + '-modified';\n    }\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok($dropdown.hasClass('something'));\n\n  assert.ok($dropdown.hasClass('test'));\n  assert.ok($dropdown.hasClass('test-modified'));\n});\n\nmodule('Dropdown - adaptDropdownCss compatibility');\n\ntest('only return when adapted', function (assert) {\n  var $element = $('<select class=\"original\"></select>');\n  var options = new Options({\n    adaptDropdownCssClass: function (clazz) {\n      return 'modified';\n    }\n  });\n\n  var select = new DropdownCSS($element, options);\n  var $dropdown = select.render();\n\n  assert.ok(!$dropdown.hasClass('original'));\n  assert.ok($dropdown.hasClass('modified'));\n});\n"]}