{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/data/inputData-tests.js"],"names":["module","$","require","Options","Utils","ArrayData","InputData","InputAdapter","Decorate","test","assert","options","data","id","text","$element","adapter","select","equal","val","selected","unselect","expect","current","length","item"],"mappings":"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","file":"inputData-tests.js","sourcesContent":["module('Data adapters - <input> compatibility');\n\nvar $ = require('jquery');\n\nvar Options = require('select2/options');\nvar Utils = require('select2/utils');\n\nvar ArrayData = require('select2/data/array');\nvar InputData = require('select2/compat/inputData');\n\nvar InputAdapter = Utils.Decorate(ArrayData, InputData);\n\ntest('test that options can be selected', function (assert) {\n  var options = new Options({\n    data: [\n      {\n        id: 'test',\n        text: 'Test'\n      }\n    ]\n  });\n  var $element = $('<input />');\n\n  var adapter = new InputAdapter($element, options);\n\n  adapter.select({\n    id: 'test'\n  });\n\n  assert.equal(\n    $element.val(),\n    'test',\n    'The id of the item should be the value'\n  );\n});\n\ntest('unselect the single selected option clears the value', function (assert) {\n  var options = new Options({\n    data: [\n      {\n        id: 'test',\n        text: 'Test',\n        selected: true\n      }\n    ]\n  });\n  var $element = $('<input />');\n\n  var adapter = new InputAdapter($element, options);\n\n  adapter.unselect({\n    id: 'test'\n  });\n\n  assert.equal(\n    $element.val(),\n    '',\n    'The id should no longer be in the value'\n  );\n});\n\ntest('options can be unselected individually', function (assert) {\n  var options = new Options({\n    data: [\n      {\n        id: 'test',\n        text: 'Test'\n      },\n      {\n        id: 'test2',\n        text: 'Test2'\n      },\n      {\n        id: 'test3',\n        text: 'Test3'\n      }\n    ]\n  });\n  var $element = $('<input />');\n  $element.val('test,test2,test3');\n\n  var adapter = new InputAdapter($element, options);\n\n  adapter.unselect({\n    id: 'test2'\n  });\n\n  assert.equal(\n    $element.val(),\n    'test,test3',\n    'The value should contain all the still selected options'\n  );\n});\n\ntest('default values can be set', function (assert) {\n  assert.expect(4);\n\n  var options = new Options({\n    data: [\n      {\n        id: 'test',\n        text: 'Test'\n      }\n    ]\n  });\n  var $element = $('<input value=\"test\" />');\n\n  var adapter = new InputAdapter($element, options);\n\n  adapter.current(function (data) {\n    assert.equal(\n      data.length,\n      1,\n      'There should only be a single selected option'\n    );\n\n    var item = data[0];\n\n    assert.equal(item.id, 'test');\n    assert.equal(item.text, 'Test');\n  });\n\n  assert.equal(\n    $element.val(),\n    'test',\n    'The value should not have been altered'\n  );\n});\n\ntest('no default value', function (assert) {\n  assert.expect(2);\n\n  var options = new Options({\n    data: [\n      {\n        id: 'test',\n        text: 'Test'\n      }\n    ]\n  });\n  var $element = $('<input />');\n\n  var adapter = new InputAdapter($element, options);\n\n  adapter.current(function (data) {\n    assert.equal(\n      data.length,\n      0,\n      'There should be no selected options'\n    );\n  });\n\n  assert.equal(\n    $element.val(),\n    '',\n    'The value should not have been altered'\n  );\n});\n"]}