{"version":3,"sources":["../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/tests/data/tags-tests.js"],"names":["module","SelectData","require","Tags","$","Options","Utils","SelectTags","Decorate","options","tags","test","assert","data","query","term","equal","results","length","item","id","text","page","first","$children","$tag","last","val","insertTag","tag","push","createTag","params"],"mappings":"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","file":"tags-tests.js","sourcesContent":["module('Data adapters - Tags');\n\nvar SelectData = require('select2/data/select');\nvar Tags = require('select2/data/tags');\n\nvar $ = require('jquery');\nvar Options = require('select2/options');\nvar Utils = require('select2/utils');\n\nvar SelectTags = Utils.Decorate(SelectData, Tags);\nvar options = new Options({\n  tags: true\n});\n\ntest('does not trigger on blank or null terms', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: ''\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'One');\n    assert.equal(item.text, 'One');\n  });\n\n  data.query({\n    term: null\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'One');\n    assert.equal(item.text, 'One');\n  });\n});\n\ntest('white space is trimmed by default', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: '  '\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'One');\n    assert.equal(item.text, 'One');\n  });\n\n  data.query({\n    term: ' One '\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'One');\n    assert.equal(item.text, 'One');\n  });\n});\n\ntest('does not trigger for additional pages', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    page: 2\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'One');\n    assert.equal(item.text, 'One');\n  });\n});\n\ntest('creates tag at beginning', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: 'o'\n  }, function (data) {\n    assert.equal(data.results.length, 2);\n\n    var first = data.results[0];\n\n    assert.equal(first.id, 'o');\n    assert.equal(first.text, 'o');\n  });\n});\n\ntest('tags can be the only result', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: 'test'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'test');\n    assert.equal(item.text, 'test');\n  });\n});\n\ntest('tags are injected as options', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: 'test'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var $children = $('#qunit-fixture .single option');\n\n    assert.equal($children.length, 2);\n\n    var $tag = $children.last();\n\n    assert.equal($tag.val(), 'test');\n    assert.equal($tag.text(), 'test');\n  });\n});\n\ntest('old tags are removed automatically', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: 'first'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var $children = $('#qunit-fixture .single option');\n\n    assert.equal($children.length, 2);\n  });\n\n  data.query({\n    term: 'second'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var $children = $('#qunit-fixture .single option');\n\n    assert.equal($children.length, 2);\n\n    var $tag = $children.last();\n\n    assert.equal($tag.val(), 'second');\n    assert.equal($tag.text(), 'second');\n  });\n});\n\ntest('insertTag controls the tag location', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.insertTag = function (data, tag) {\n    data.push(tag);\n  };\n\n  data.query({\n    term: 'o'\n  }, function (data) {\n    assert.equal(data.results.length, 2);\n\n    var item = data.results[1];\n\n    assert.equal(item.id, 'o');\n    assert.equal(item.text, 'o');\n  });\n});\n\ntest('insertTag can be controlled through the options', function (assert) {\n  var options = new Options({\n    insertTag: function (data, tag) {\n      data.push(tag);\n    }\n  });\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.query({\n    term: 'o'\n  }, function (data) {\n    assert.equal(data.results.length, 2);\n\n    var item = data.results[1];\n\n    assert.equal(item.id, 'o');\n    assert.equal(item.text, 'o');\n  });\n});\n\ntest('createTag controls the tag object', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.createTag = function (params) {\n    return {\n      id: 0,\n      text: params.term\n    };\n  };\n\n  data.query({\n    term: 'test'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 0);\n    assert.equal(item.text, 'test');\n  });\n});\n\ntest('createTag returns null for no tag', function (assert) {\n  var data = new SelectTags($('#qunit-fixture .single'), options);\n\n  data.createTag = function (params) {\n    return null;\n  };\n\n  data.query({\n    term: 'o'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n  });\n});\n\ntest('the createTag options customizes the function', function (assert) {\n  var data = new SelectTags(\n    $('#qunit-fixture .single'),\n    new Options({\n      tags: true,\n      createTag: function (params) {\n        return {\n          id: params.term,\n          text: params.term,\n          tag: true\n        };\n      }\n    })\n  );\n\n  data.query({\n    term: 'test'\n  }, function (data) {\n    assert.equal(data.results.length, 1);\n\n    var item = data.results[0];\n\n    assert.equal(item.id, 'test');\n    assert.equal(item.text, 'test');\n    assert.equal(item.tag, true);\n  });\n});"]}