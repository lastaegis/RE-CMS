{"version":3,"sources":["../../../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/src/js/select2/data/base.js"],"names":["define","Utils","BaseAdapter","$element","options","__super__","constructor","call","Extend","Observable","prototype","current","callback","Error","query","params","bind","container","$container","destroy","generateResultId","data","id","generateChars","toString"],"mappings":";;AAAAA,OAAO,CACL,UADK,CAAP,EAEG,UAAUC,KAAV,EAAiB;AAClB,WAASC,WAAT,CAAsBC,QAAtB,EAAgCC,OAAhC,EAAyC;AACvCF,gBAAYG,SAAZ,CAAsBC,WAAtB,CAAkCC,IAAlC,CAAuC,IAAvC;AACD;;AAEDN,QAAMO,MAAN,CAAaN,WAAb,EAA0BD,MAAMQ,UAAhC;;AAEAP,cAAYQ,SAAZ,CAAsBC,OAAtB,GAAgC,UAAUC,QAAV,EAAoB;AAClD,UAAM,IAAIC,KAAJ,CAAU,wDAAV,CAAN;AACD,GAFD;;AAIAX,cAAYQ,SAAZ,CAAsBI,KAAtB,GAA8B,UAAUC,MAAV,EAAkBH,QAAlB,EAA4B;AACxD,UAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACD,GAFD;;AAIAX,cAAYQ,SAAZ,CAAsBM,IAAtB,GAA6B,UAAUC,SAAV,EAAqBC,UAArB,EAAiC;AAC5D;AACD,GAFD;;AAIAhB,cAAYQ,SAAZ,CAAsBS,OAAtB,GAAgC,YAAY;AAC1C;AACD,GAFD;;AAIAjB,cAAYQ,SAAZ,CAAsBU,gBAAtB,GAAyC,UAAUH,SAAV,EAAqBI,IAArB,EAA2B;AAClE,QAAIC,KAAKL,UAAUK,EAAV,GAAe,UAAxB;;AAEAA,UAAMrB,MAAMsB,aAAN,CAAoB,CAApB,CAAN;;AAEA,QAAIF,KAAKC,EAAL,IAAW,IAAf,EAAqB;AACnBA,YAAM,MAAMD,KAAKC,EAAL,CAAQE,QAAR,EAAZ;AACD,KAFD,MAEO;AACLF,YAAM,MAAMrB,MAAMsB,aAAN,CAAoB,CAApB,CAAZ;AACD;AACD,WAAOD,EAAP;AACD,GAXD;;AAaA,SAAOpB,WAAP;AACD,CAvCD","file":"base.js","sourcesContent":["define([\n  '../utils'\n], function (Utils) {\n  function BaseAdapter ($element, options) {\n    BaseAdapter.__super__.constructor.call(this);\n  }\n\n  Utils.Extend(BaseAdapter, Utils.Observable);\n\n  BaseAdapter.prototype.current = function (callback) {\n    throw new Error('The `current` method must be defined in child classes.');\n  };\n\n  BaseAdapter.prototype.query = function (params, callback) {\n    throw new Error('The `query` method must be defined in child classes.');\n  };\n\n  BaseAdapter.prototype.bind = function (container, $container) {\n    // Can be implemented in subclasses\n  };\n\n  BaseAdapter.prototype.destroy = function () {\n    // Can be implemented in subclasses\n  };\n\n  BaseAdapter.prototype.generateResultId = function (container, data) {\n    var id = container.id + '-result-';\n\n    id += Utils.generateChars(4);\n\n    if (data.id != null) {\n      id += '-' + data.id.toString();\n    } else {\n      id += '-' + Utils.generateChars(4);\n    }\n    return id;\n  };\n\n  return BaseAdapter;\n});\n"]}