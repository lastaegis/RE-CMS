{"version":3,"sources":["../../../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/src/js/select2/data/tokenizer.js"],"names":["define","$","Tokenizer","decorated","$element","options","tokenizer","get","undefined","call","prototype","bind","container","$container","$search","dropdown","selection","find","query","params","callback","self","createAndSelect","data","item","_normalizeItem","$existingOptions","filter","val","id","length","$option","option","attr","_removeOldTags","addOptions","select","trigger","term","tokenData","focus","_","separators","i","createTag","text","termChar","inArray","part","substr","partParams","extend"],"mappings":"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","file":"tokenizer.js","sourcesContent":["define([\n  'jquery'\n], function ($) {\n  function Tokenizer (decorated, $element, options) {\n    var tokenizer = options.get('tokenizer');\n\n    if (tokenizer !== undefined) {\n      this.tokenizer = tokenizer;\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  Tokenizer.prototype.bind = function (decorated, container, $container) {\n    decorated.call(this, container, $container);\n\n    this.$search =  container.dropdown.$search || container.selection.$search ||\n      $container.find('.select2-search__field');\n  };\n\n  Tokenizer.prototype.query = function (decorated, params, callback) {\n    var self = this;\n\n    function createAndSelect (data) {\n      // Normalize the data object so we can use it for checks\n      var item = self._normalizeItem(data);\n\n      // Check if the data object already exists as a tag\n      // Select it if it doesn't\n      var $existingOptions = self.$element.find('option').filter(function () {\n        return $(this).val() === item.id;\n      });\n\n      // If an existing option wasn't found for it, create the option\n      if (!$existingOptions.length) {\n        var $option = self.option(item);\n        $option.attr('data-select2-tag', true);\n\n        self._removeOldTags();\n        self.addOptions([$option]);\n      }\n\n      // Select the item, now that we know there is an option for it\n      select(item);\n    }\n\n    function select (data) {\n      self.trigger('select', {\n        data: data\n      });\n    }\n\n    params.term = params.term || '';\n\n    var tokenData = this.tokenizer(params, this.options, createAndSelect);\n\n    if (tokenData.term !== params.term) {\n      // Replace the search term if we have the search box\n      if (this.$search.length) {\n        this.$search.val(tokenData.term);\n        this.$search.focus();\n      }\n\n      params.term = tokenData.term;\n    }\n\n    decorated.call(this, params, callback);\n  };\n\n  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {\n    var separators = options.get('tokenSeparators') || [];\n    var term = params.term;\n    var i = 0;\n\n    var createTag = this.createTag || function (params) {\n      return {\n        id: params.term,\n        text: params.term\n      };\n    };\n\n    while (i < term.length) {\n      var termChar = term[i];\n\n      if ($.inArray(termChar, separators) === -1) {\n        i++;\n\n        continue;\n      }\n\n      var part = term.substr(0, i);\n      var partParams = $.extend({}, params, {\n        term: part\n      });\n\n      var data = createTag(partParams);\n\n      if (data == null) {\n        i++;\n        continue;\n      }\n\n      callback(data);\n\n      // Reset the term to not include the tokenized portion\n      term = term.substr(i + 1) || '';\n      i = 0;\n    }\n\n    return {\n      term: term\n    };\n  };\n\n  return Tokenizer;\n});\n"]}