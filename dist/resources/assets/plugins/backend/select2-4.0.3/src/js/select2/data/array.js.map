{"version":3,"sources":["../../../../../../../../../../resources/assets/plugins/backend/select2-4.0.3/src/js/select2/data/array.js"],"names":["define","SelectAdapter","Utils","$","ArrayAdapter","$element","options","data","get","__super__","constructor","call","addOptions","convertToOptions","Extend","prototype","select","$option","find","filter","i","elm","value","id","toString","length","option","self","$existing","existingIds","map","item","$options","onlyItem","val","d","_normalizeItem","inArray","$existingOption","existingData","newData","extend","$newOption","replaceWith","children","$children","appendMany","push"],"mappings":";;AAAAA,OAAO,CACL,UADK,EAEL,UAFK,EAGL,QAHK,CAAP,EAIG,UAAUC,aAAV,EAAyBC,KAAzB,EAAgCC,CAAhC,EAAmC;AACpC,WAASC,YAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;AACxC,QAAIC,OAAOD,QAAQE,GAAR,CAAY,MAAZ,KAAuB,EAAlC;;AAEAJ,iBAAaK,SAAb,CAAuBC,WAAvB,CAAmCC,IAAnC,CAAwC,IAAxC,EAA8CN,QAA9C,EAAwDC,OAAxD;;AAEA,SAAKM,UAAL,CAAgB,KAAKC,gBAAL,CAAsBN,IAAtB,CAAhB;AACD;;AAEDL,QAAMY,MAAN,CAAaV,YAAb,EAA2BH,aAA3B;;AAEAG,eAAaW,SAAb,CAAuBC,MAAvB,GAAgC,UAAUT,IAAV,EAAgB;AAC9C,QAAIU,UAAU,KAAKZ,QAAL,CAAca,IAAd,CAAmB,QAAnB,EAA6BC,MAA7B,CAAoC,UAAUC,CAAV,EAAaC,GAAb,EAAkB;AAClE,aAAOA,IAAIC,KAAJ,IAAaf,KAAKgB,EAAL,CAAQC,QAAR,EAApB;AACD,KAFa,CAAd;;AAIA,QAAIP,QAAQQ,MAAR,KAAmB,CAAvB,EAA0B;AACxBR,gBAAU,KAAKS,MAAL,CAAYnB,IAAZ,CAAV;;AAEA,WAAKK,UAAL,CAAgBK,OAAhB;AACD;;AAEDb,iBAAaK,SAAb,CAAuBO,MAAvB,CAA8BL,IAA9B,CAAmC,IAAnC,EAAyCJ,IAAzC;AACD,GAZD;;AAcAH,eAAaW,SAAb,CAAuBF,gBAAvB,GAA0C,UAAUN,IAAV,EAAgB;AACxD,QAAIoB,OAAO,IAAX;;AAEA,QAAIC,YAAY,KAAKvB,QAAL,CAAca,IAAd,CAAmB,QAAnB,CAAhB;AACA,QAAIW,cAAcD,UAAUE,GAAV,CAAc,YAAY;AAC1C,aAAOH,KAAKI,IAAL,CAAU5B,EAAE,IAAF,CAAV,EAAmBoB,EAA1B;AACD,KAFiB,EAEff,GAFe,EAAlB;;AAIA,QAAIwB,WAAW,EAAf;;AAEA;AACA,aAASC,QAAT,CAAmBF,IAAnB,EAAyB;AACvB,aAAO,YAAY;AACjB,eAAO5B,EAAE,IAAF,EAAQ+B,GAAR,MAAiBH,KAAKR,EAA7B;AACD,OAFD;AAGD;;AAED,SAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAI5B,KAAKkB,MAAzB,EAAiCU,GAAjC,EAAsC;AACpC,UAAIJ,OAAO,KAAKK,cAAL,CAAoB7B,KAAK4B,CAAL,CAApB,CAAX;;AAEA;AACA,UAAIhC,EAAEkC,OAAF,CAAUN,KAAKR,EAAf,EAAmBM,WAAnB,KAAmC,CAAvC,EAA0C;AACxC,YAAIS,kBAAkBV,UAAUT,MAAV,CAAiBc,SAASF,IAAT,CAAjB,CAAtB;;AAEA,YAAIQ,eAAe,KAAKR,IAAL,CAAUO,eAAV,CAAnB;AACA,YAAIE,UAAUrC,EAAEsC,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBV,IAAnB,EAAyBQ,YAAzB,CAAd;;AAEA,YAAIG,aAAa,KAAKhB,MAAL,CAAYc,OAAZ,CAAjB;;AAEAF,wBAAgBK,WAAhB,CAA4BD,UAA5B;;AAEA;AACD;;AAED,UAAIzB,UAAU,KAAKS,MAAL,CAAYK,IAAZ,CAAd;;AAEA,UAAIA,KAAKa,QAAT,EAAmB;AACjB,YAAIC,YAAY,KAAKhC,gBAAL,CAAsBkB,KAAKa,QAA3B,CAAhB;;AAEA1C,cAAM4C,UAAN,CAAiB7B,OAAjB,EAA0B4B,SAA1B;AACD;;AAEDb,eAASe,IAAT,CAAc9B,OAAd;AACD;;AAED,WAAOe,QAAP;AACD,GA9CD;;AAgDA,SAAO5B,YAAP;AACD,CA9ED","file":"array.js","sourcesContent":["define([\n  './select',\n  '../utils',\n  'jquery'\n], function (SelectAdapter, Utils, $) {\n  function ArrayAdapter ($element, options) {\n    var data = options.get('data') || [];\n\n    ArrayAdapter.__super__.constructor.call(this, $element, options);\n\n    this.addOptions(this.convertToOptions(data));\n  }\n\n  Utils.Extend(ArrayAdapter, SelectAdapter);\n\n  ArrayAdapter.prototype.select = function (data) {\n    var $option = this.$element.find('option').filter(function (i, elm) {\n      return elm.value == data.id.toString();\n    });\n\n    if ($option.length === 0) {\n      $option = this.option(data);\n\n      this.addOptions($option);\n    }\n\n    ArrayAdapter.__super__.select.call(this, data);\n  };\n\n  ArrayAdapter.prototype.convertToOptions = function (data) {\n    var self = this;\n\n    var $existing = this.$element.find('option');\n    var existingIds = $existing.map(function () {\n      return self.item($(this)).id;\n    }).get();\n\n    var $options = [];\n\n    // Filter out all items except for the one passed in the argument\n    function onlyItem (item) {\n      return function () {\n        return $(this).val() == item.id;\n      };\n    }\n\n    for (var d = 0; d < data.length; d++) {\n      var item = this._normalizeItem(data[d]);\n\n      // Skip items which were pre-loaded, only merge the data\n      if ($.inArray(item.id, existingIds) >= 0) {\n        var $existingOption = $existing.filter(onlyItem(item));\n\n        var existingData = this.item($existingOption);\n        var newData = $.extend(true, {}, item, existingData);\n\n        var $newOption = this.option(newData);\n\n        $existingOption.replaceWith($newOption);\n\n        continue;\n      }\n\n      var $option = this.option(item);\n\n      if (item.children) {\n        var $children = this.convertToOptions(item.children);\n\n        Utils.appendMany($option, $children);\n      }\n\n      $options.push($option);\n    }\n\n    return $options;\n  };\n\n  return ArrayAdapter;\n});\n"]}