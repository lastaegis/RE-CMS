{"version":3,"sources":["../../../../../resources/assets/plugins/lightGallery-master/Gruntfile.js"],"names":["module","exports","grunt","require","loadNpmTasks","initConfig","pkg","file","readJSON","banner","clean","files","concat","options","basic_and_extras","uglify","dist","src","dest","umd","all","deps","args","amd","indent","items","prefix","separator","suffix","cjs","global","pipeline","usebanner","taskName","position","linebreak","cssmin","target","copy","main","expand","cwd","qunit","urls","jshint","reporter","gruntfile","jshintrc","test","sass","style","watch","tasks","css","connect","server","hostname","port","registerTask","log","warn","task","run"],"mappings":"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","file":"Gruntfile.js","sourcesContent":["'use strict';\nmodule.exports = function(grunt) {\n    // Load all grunt tasks\n    require('load-grunt-tasks')(grunt);\n\n    // Show elapsed time at the end\n    require('time-grunt')(grunt);\n\n    grunt.loadNpmTasks('grunt-umd');\n    grunt.loadNpmTasks('grunt-banner');\n\n    // Project configuration.\n    grunt.initConfig({\n        // Metadata.\n        pkg: grunt.file.readJSON('package.json'),\n        banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +\n            '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n            '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\\\n\" : \"\" %>' +\n            '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +\n            ' Licensed GPLv3 */\\n',\n\n        // Task configuration.\n        clean: {\n            files: ['dist']\n        },\n\n        /* jshint ignore:start */\n        concat: {\n            options: {\n                banner: '<%= banner %>'\n            },\n            basic_and_extras: {\n                files: {\n                    'dist/css/<%= pkg.name %>.css': ['src/css/<%= pkg.name %>.css'],\n                    'dist/css/lg-fb-comment-box.css': ['src/css/lg-fb-comment-box.css'],\n                    'dist/css/lg-transitions.css': ['src/css/lg-transitions.css'],\n                    'dist/js/<%= pkg.name %>.js': ['dist/js/<%= pkg.name %>.js'],\n                    'dist/js/<%= pkg.name %>-all.js': ['dist/js/<%= pkg.name %>.js', 'modules/lg-autoplay.js', 'modules/lg-fullscreen.js', 'modules/lg-pager.js', 'modules/lg-thumbnail.js', 'modules/lg-video.js', 'modules/lg-zoom.js', 'modules/lg-hash.js', 'modules/lg-share.js']\n                }\n            }\n        },\n        /* jshint ignore:end */\n        uglify: {\n            options: {\n                banner: '<%= banner %>'\n            },\n            dist: {\n                files: [{\n                    src: 'dist/js/<%= pkg.name %>.js',\n                    dest: 'dist/js/<%= pkg.name %>.min.js'\n                }, {\n                    src: ['dist/js/<%= pkg.name %>.js', 'modules/lg-autoplay.js', 'modules/lg-fullscreen.js', 'modules/lg-pager.js', 'modules/lg-thumbnail.js', 'modules/lg-video.js', 'modules/lg-zoom.js', 'modules/lg-hash.js', 'modules/lg-share.js'],\n                    dest: 'dist/js/<%= pkg.name %>-all.min.js'\n                }]\n            }\n        },\n        umd: {\n            all: {\n                options: {\n                    src: 'src/js/<%= pkg.name %>.js',\n                    dest: 'dist/js/<%= pkg.name %>.js',\n                    deps: {\n                        args : ['$'],\n                        'default': ['$'],\n                        amd: {\n                            indent: 6,\n                            items: ['jquery'],\n                            prefix: '\\'',\n                            separator: ',\\n',\n                            suffix: '\\''\n                        },\n                        cjs: {\n                            indent: 6,\n                            items: ['jquery'],\n                            prefix: 'require(\\'',\n                            separator: ',\\n',\n                            suffix: '\\')'\n                        },\n                        global: {\n                            items: ['jQuery'],\n                        },\n                        pipeline: {\n                            indent: 0,\n                            items : ['jquery'],\n                            prefix: '//= require ',\n                            separator: '\\n',\n                        }\n                    }\n                }\n            }\n        },\n\n        usebanner: {\n            taskName: {\n                options: {\n                    position: 'top',\n                    banner: '<%= banner %>',\n                    linebreak: true\n                },\n                files: {\n                    src: ['dist/js/<%= pkg.name %>.js']\n                }\n            }\n        },\n        cssmin: {\n            target: {\n                files: [{\n                    'dist/css/<%= pkg.name %>.min.css': ['src/css/<%= pkg.name %>.css']\n                }, {\n                    'dist/css/lg-fb-comment-box.min.css': ['src/css/lg-fb-comment-box.css']\n                },{\n                    'dist/css/lg-transitions.min.css': ['src/css/lg-transitions.css']\n                }]\n            }\n        },\n        copy: {\n            main: {\n                files: [{\n                    expand: true,\n                    cwd: 'src/img/',\n                    src: ['**'],\n                    dest: 'dist/img/'\n                }, {\n                    expand: true,\n                    cwd: 'src/fonts/',\n                    src: ['**'],\n                    dest: 'dist/fonts/'\n                }]\n            }\n        },\n        qunit: {\n            all: {\n                options: {\n                    urls: ['http://localhost:9000/test/<%= pkg.name %>.html']\n                }\n            }\n        },\n        jshint: {\n            options: {\n                reporter: require('jshint-stylish')\n            },\n            gruntfile: {\n                options: {\n                    jshintrc: '.jshintrc'\n                },\n                src: 'Gruntfile.js'\n            },\n            src: {\n                options: {\n                    jshintrc: 'src/js/.jshintrc'\n                },\n                src: ['src/**/*.js']\n            },\n            test: {\n                options: {\n                    jshintrc: 'test/.jshintrc'\n                },\n                src: ['test/**/*.js']\n            }\n        },\n        sass: {\n            dist: {\n                options: { // Target options\n                    style: 'expanded'\n                },\n                files: {\n                    'src/css/lightgallery.css': 'src/sass/lightgallery.scss'\n                }\n            }\n        },\n        watch: {\n            gruntfile: {\n                files: '<%= jshint.gruntfile.src %>',\n                tasks: ['jshint:gruntfile']\n            },\n            src: {\n                files: '<%= jshint.src.src %>',\n                tasks: ['jshint:src', 'qunit']\n            },\n            test: {\n                files: '<%= jshint.test.src %>',\n                tasks: ['jshint:test', 'qunit']\n            },\n            css: {\n                files: 'src/**/*.scss',\n                tasks: ['sass']\n            }\n        },\n        connect: {\n            server: {\n                options: {\n                    hostname: '0.0.0.0',\n                    port: 9000\n                }\n            }\n        }\n    });\n\n    // Default task.\n    grunt.registerTask('default', ['clean', 'jshint', 'connect', 'qunit', 'umd:all', 'concat','uglify', 'sass', 'cssmin', 'copy', /*'usebanner', 'watch'*/]);\n    grunt.registerTask('server', function() {\n        grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n        grunt.task.run(['serve']);\n    });\n\n    grunt.registerTask('serve', ['connect', 'watch']);\n    grunt.registerTask('test', ['jshint', 'connect', 'qunit']);\n};\n"]}